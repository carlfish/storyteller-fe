{
  "openapi": "3.0.0",
  "info": {
    "title": "Storyteller API",
    "version": "0.1.0",
    "description": "REST API for creating and managing interactive stories with AI-powered storytelling"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/stories": {
      "get": {
        "summary": "List all stories",
        "description": "Retrieves a list of all stories for the authenticated user with basic metadata",
        "responses": {
          "200": {
            "description": "Stories list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoryIndex"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new story",
        "description": "Creates a new story with the provided character descriptions and returns the story UUID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Story created successfully",
            "headers": {
              "Location": {
                "description": "URL of the created story",
                "schema": {
                  "type": "string",
                  "example": "/stories/550e8400-e29b-41d4-a716-446655440000"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/stories/{story_uuid}": {
      "get": {
        "summary": "Get story details",
        "description": "Retrieves the complete story state including characters, chapters, scenes, and message history",
        "parameters": [
          {
            "name": "story_uuid",
            "in": "path",
            "required": true,
            "description": "UUID of the story to retrieve",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Story details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Story"
                }
              }
            }
          },
          "404": {
            "description": "Story not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Execute a command on the story",
        "description": "Executes a storytelling command (chat, retry, rewind, fix, replace, chapter) on the specified story",
        "parameters": [
          {
            "name": "story_uuid",
            "in": "path",
            "required": true,
            "description": "UUID of the story to execute the command on",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResponse"
                }
              }
            }
          },
          "404": {
            "description": "Story not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Auth0 JWT Bearer token with 'storyteller:use' scope required for all endpoints"
      }
    },
    "schemas": {
      "CreateStoryRequest": {
        "type": "object",
        "required": ["characters"],
        "properties": {
          "characters": {
            "type": "string",
            "description": "Character descriptions to initialize the story with",
            "example": "A brave knight named Sir Galahad who seeks the Holy Grail. A wise wizard named Merlin who guides heroes on their quests."
          }
        }
      },
      "CommandRequest": {
        "type": "object",
        "required": ["command"],
        "properties": {
          "command": {
            "type": "string",
            "enum": ["chat", "retry", "rewind", "fix", "replace", "chapter"],
            "description": "The command to execute on the story"
          },
          "body": {
            "type": "string",
            "description": "Optional command body (required for chat, fix, replace, and chapter commands)",
            "example": "I walk into the tavern and order a drink"
          }
        }
      },
      "CommandResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"],
            "description": "Status of the command execution"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Response messages from the AI and system"
          }
        }
      },
      "Story": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the story"
          },
          "title": {
            "type": "string",
            "description": "The title of the story"
          },
          "characters": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Character summaries"
          },
          "chapters": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Chapter summaries"
          },
          "scenes": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "List of scenes in the current chapter"
          },
          "old_messages": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Archived message history"
          },
          "current_messages": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Active message history"
          }
        }
      },
      "StoryIndex": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the story"
          },
          "title": {
            "type": "string",
            "description": "The title of the story"
          },
          "chapters": {
            "type": "integer",
            "description": "Number of chapters in the story"
          },
          "characters": {
            "type": "integer",
            "description": "Number of characters in the story"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Story creation timestamp"
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "Story last modification timestamp"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "Error message describing what went wrong"
          }
        }
      }
    }
  }
}